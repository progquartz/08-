using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace _08_operator
{
    class Program
    {
        static void Main(string[] args)
        {
            /*
             c#은 수식 연산자, 논리 연산자, 조건 연산자등의 것을 가지고 있다.
            산술 연산자	| +, -, *, /, %         |	int a = (x + y - z) * (b / c) % d;
                        |───────────────────────|
            할당 연산자	| =, +=, -=, *=, /=, %= | 	int a = 100;
                        |───────────────────────|
            증감 연산자  | ++, --	            |   int i = 1;
                        |───────────────────────|
            논리 연산자	| && , ||, !            |	if ((a > 1 && b < 0) || c == 1 || !d)
                        |───────────────────────|
            비교 연산자  | <, >, ==, !=, >=, <=	|   if (a <= b)
                        |───────────────────────|
            비트 연산자	| & (AND), | (OR), ^ (XOR)| 	byte a=7; // byte b=(a & 3) | 4;
            [설명] 비트 연산에서 & 는 둘이 1인 경우만 1이 되고 (예: 1 & 1 = 1), | 는 둘 중에 하나라도 1인 경우 1이 되며, ^ 는 둘 중에 하나만 1 인 경우 1이 된다.
                        |───────────────────────|
            Shift 연산자 | >>, <<	            |   int i=2; // i = i << 5;
            [설명] i의 값을 왼쪽으로 5 비트 이동한다. 결과값은 2의 6승 즉 64가 된다.
            조건 연산자	| ? , ?? (C# 3.0 이상)  | 	int val = (a > b) ? a : b;
            [설명] a가 b보다 크면 val에 a 값을 대입하고, 같거나 작으면 b 값을 대입한다 | string s = str ?? "(널)";
             */

            double 섭씨 = 12;
            double 화씨 = (섭씨 * 9 / 5) + 32;

            int i = 100 % 3;

            // 할당 연산자
            int a = 100;
            a = a + 50;
            a += 50;
            a -= 50;

            // 증감 연산자
            int x = 0;
            x++;
            x--;
            ++x;
            x--;

            x = 0;
            int y = x++;
            x = 0;
            int z = ++x;

            // 비교 연산자
            int index = 100;
            if( index >= 100) { }
            
            // 논리 연산자
            if(index > 1 && index < 10000) { }

            if(index > 1 || index < 10000) { }

            if(index != 1) { }

            // 비트 연산자

            x = 0x07; // 00000111 7
            y = 0x0D; // 00001110 14
            x = Convert.ToInt32("00000111", 2);
            x = Convert.ToInt32("00001110", 2);

            int j = x & y; // 00000110 (같이 있으면 1 한개라도 없으면 0)
            j = x | y; // 00001111 (둘중 하나라도 1이면 1)
            j = x ^ y; // 00001001 (둘이 같으면 0 , 다르면 0)

            // 쉬프트 연산자

            j = j << 2; // 00100100 << 왼쪽으로 2칸 (4배 커졌다는 내용)
            j = 4 << 1; // 0100 -> 1000 4-> 8 2배
            j = 8 >> 1; // 1000 -> 0100 8 -> 4 1/2배

            // 조건연산자 ? ??
            int val;
            if (x > y)
            {
                val = x;
            }
            else
            {
                val = y;
            } // 이리 적기 싫으니 뭔가 새로운 방법을 찾아본다면 다음과 같은 방식이 가능한데, 

            val = (x > y) ? x : y; // ? 좌측의 것이 사실이면 ? 우측의 것에서 : 좌측의 것을 , 거짓이면 : 우측의 것이 된다.)

            string s = null;
            s = s ?? "***"; // s가 null이면, "***" 값을 이용하고 s가 널이 아니면, s를 리턴한다.
        }
    }
}
